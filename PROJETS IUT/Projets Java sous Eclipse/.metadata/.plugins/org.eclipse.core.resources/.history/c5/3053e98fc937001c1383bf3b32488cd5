import java.util.Arrays;

public class CompteurKilométriqueTableau implements CompteurKilométrique {
	
	//variables
	private int valeur;
	
	Compteur [] compteurs = new Compteur[3];
	
	// Opérations
	
	//Construction
	public CompteurKilométrique unCompteur(int v) throws IllegalArgumentException {
		if (v<0 || v >= 999) {
			throw new IllegalArgumentException(" La valeur doit etre initialisée entre 0 et 999 exclus.");
		}
		return new CompteurKilométriqueTableau(v);
	}
	
	public CompteurKilométriqueTableau(int v) {
		this.valeur = v;
	}
	
	//Constantes
	public static final CompteurKilométrique COMPTEUR_NUL = new CompteurKilométriqueTableau(000);
	
	// Consultation
	
	/*//retourne la valeur d'un entier
	public int getEntier() {
		return this.valeur;
	}*/
	
	// Modification 
	//ajoute 1 a la valeur d'un compteur
	public void ajouterUn() throws IllegalArgumentException {
		if (this.valeur > 998) {
			throw new IllegalArgumentException("Valeur maximale du compteur atteinte");
		}
		this.valeur += 1;
	}
	
	public int versEntier() {
		return this.valeur;
	}
	
	// Evaluation
	
	//retourne vrai si v1 == v2
	public boolean egal(CompteurKilométrique c) {
		return this.valeur == c.versEntier();
	}
	
	//retourne vrai si v1 < v2
	public boolean inf(CompteurKilométrique c) {
		return this.valeur < c.versEntier();
	}
	
	//toString
	public String toString() {
		return Arrays.toString(compteurs);
	}


	
/*Propriétés
(P1) compteurNul = unCompteur (0)
(P2) ajouterUn (c) = unCompteur (versEntier(c) + 1)
(P3) égal (unCompteur (v1), unCompteur (v2)) =
si v1 = v2 alors vrai sinon faux
(P4) inf (unCompteur (v1), unCompteur (v2)) =
si v1 < v2 alors vrai sinon faux
(P5) versEntier (unCompteur (v)) = v*/
	
	
}
